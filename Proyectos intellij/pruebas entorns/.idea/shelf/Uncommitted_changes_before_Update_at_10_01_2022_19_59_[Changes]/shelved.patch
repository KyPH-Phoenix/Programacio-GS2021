Index: pruebas entorns.iml
===================================================================
diff --git a/pruebas entorns.iml b/pruebas entorns.iml
deleted file mode 100644
--- a/pruebas entorns.iml	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,28 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<module type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" inherit-compiler-output="true">
-    <exclude-output />
-    <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/tests" isTestSource="true" />
-    </content>
-    <orderEntry type="inheritedJdk" />
-    <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="module-library" scope="TEST">
-      <library name="JUnit5.7.0">
-        <CLASSES>
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.7.0/junit-jupiter-5.7.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.7.0/junit-jupiter-api-5.7.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.0/apiguardian-api-1.1.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.7.0/junit-platform-commons-1.7.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.7.0/junit-jupiter-params-5.7.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.7.0/junit-jupiter-engine-5.7.0.jar!/" />
-          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.7.0/junit-platform-engine-1.7.0.jar!/" />
-        </CLASSES>
-        <JAVADOC />
-        <SOURCES />
-      </library>
-    </orderEntry>
-  </component>
-</module>
\ No newline at end of file
Index: src/Calculator.java
===================================================================
diff --git a/src/Calculator.java b/src/Calculator.java
deleted file mode 100644
--- a/src/Calculator.java	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,64 +0,0 @@
-public class Calculator {
-
-    public static void main(String[] args) {
-        StringBuilder new = resultado()
-        String resultado = "";
-        String hola = "hola";
-        resultado = resultado + hola + " que tal";
-        System.out.println(resultado);
-        String tuMama = ". Me cago en tu madre";
-        resultado = resultado + tuMama;
-        System.out.println("------------");
-        System.out.println(resultado);
-
-    }
-
-
-    static int add(int x, int y) {
-        return x + y;
-    }
-
-    static int substract(int x, int y) {
-        return x - y;
-    }
-
-    static int product(int x, int y) {
-        return x * y;
-    }
-
-    static int divide(int x, int y) {
-        return x / y;
-    }
-
-    static int remainder(int x, int y) {
-        return x % y;
-    }
-
-    static double add(double x, double y) {
-        return x + y;
-    }
-
-    static double substract(double x, double y) {
-        return x - y;
-    }
-
-    static double multiply(double x, double y) {
-        return x * y;
-    }
-
-    static double divide(double x, double y) {
-        return x / y;
-    }
-
-    static double power(double b, double e) {
-        double result = b;
-        if (e == 0) {
-            result = 1;
-        } else {
-            for (int i = 0; i < e; i++) {
-                result = result * b;
-            }
-        }
-        return result;
-    }
-}
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.png" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.png" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.png" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.png" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/modules.xml
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
deleted file mode 100644
--- a/.idea/modules.xml	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/pruebas entorns.iml" filepath="$PROJECT_DIR$/pruebas entorns.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: tests/CalculatorTest.java
===================================================================
diff --git a/tests/CalculatorTest.java b/tests/CalculatorTest.java
deleted file mode 100644
--- a/tests/CalculatorTest.java	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,25 +0,0 @@
-import org.junit.jupiter.api.DisplayName;
-import org.junit.jupiter.api.Test;
-
-import static org.junit.jupiter.api.Assertions.*;
-
-class CalculatorTest {
-    @Test
-    @DisplayName("Suma numeros positivos o negativos, enteros o decimales.")
-    void add() {
-        assertEquals(2, Calculator.add(1, 1));
-        assertEquals(-2147483648, Calculator.add(2147483647, 1));
-        assertEquals(-7, Calculator.add(3, -10));
-    }
-    @Test
-    void addDouble() {
-        assertEquals(2.15, Calculator.add(0.1, 2.05));
-        assertEquals(4, Calculator.add(1.5, 2.5));
-        assertEquals(5, Calculator.add(-7.5,12.5));
-    }
-
-    @Test
-    void substract() {
-
-    }
-}
\ No newline at end of file
Index: .idea/misc.xml
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
deleted file mode 100644
--- a/.idea/misc.xml	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ /dev/null	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_16" default="true" project-jdk-name="16" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
-</project>
\ No newline at end of file
Index: ../Practica 1 - NUMBERS/src/Numbers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Numbers {\r\n    public static String say(long n) {\r\n        // Pasamos el numero a array de int y metemos la longitud del mismo en una variable.\r\n        int[] digits = convertirArray(n);\r\n        int longitudNumero = cifrasNumero(digits);\r\n\r\n        // Declaramos la variable \"resultado\".\r\n        String resultado = \"\";\r\n\r\n        // Si \"n\" vale 0 entonces el resultado sera \"zero\". Si no, creamos la string correspondiente.\r\n        if (n == 0) {\r\n            resultado = \"zero\";\r\n        } else {\r\n            resultado = añadirSufijos(longitudNumero, digits);\r\n        }\r\n\r\n        // Esto elimina el posible espacio del final en el resultado.\r\n        if (resultado.substring(resultado.length() - 1).equals(\" \")) {\r\n            resultado = resultado.substring(0, resultado.length() - 1);\r\n        }\r\n        return resultado.substring(0, 1).toUpperCase() + resultado.substring(1);\r\n    }\r\n\r\n    public static long words(String s) {\r\n        // Con esta variable sacamos la ultima posición de letra del string.\r\n        int longitud = s.length() - 1;\r\n\r\n        // Aquí se eliminan \"and\" y \"-\".\r\n        s = s.replace(\" and\", \"\");\r\n        s = s.replace(\"-\", \" \");\r\n        s = s.toLowerCase();\r\n\r\n        // Una vez hecho eso, se separa la string en un array donde haya espacios.\r\n        String[] cadenaSeparada = s.split(\" \");\r\n\r\n        // Declaración de variables.\r\n        long numero = 0;\r\n        long resultado = 0;\r\n\r\n        // En este ciclo vamos creando el resultado con grupos de 3\r\n        for (int i = 0; i < cadenaSeparada.length; i++) {\r\n\r\n            // Si la palabra no es una potencia (thousand, million, etc.) hace centenas.\r\n            if (!potencias(cadenaSeparada[i])) {\r\n                numero = letrasCentenas(numero, cadenaSeparada, i);\r\n\r\n                // Si la palabra ES una potencia entonces suma numero a resultado y le añade 3 ceros.\r\n            } else {\r\n                resultado += multiplicarPorPotencia(numero, cadenaSeparada[i]);\r\n                numero = 0;\r\n            }\r\n        }\r\n\r\n        // Aquí se añade el ultimo grupo de 3, ya que no tiene una potencia.\r\n        resultado += numero;\r\n\r\n        // Devuelve el resultado\r\n        return resultado;\r\n    }\r\n\r\n    // Esta función convierte grupos de 3 de letras a numeros.\r\n    private static long letrasCentenas(long numero, String[] cadenaSeparada, int i) {\r\n        // Si el valor de la variable es hundred, multiplica lo que ya tiene en numeros por 100.\r\n        if (cadenaSeparada[i].equals(\"hundred\")) {\r\n            numero *= 100;\r\n\r\n            // Si acaba en \"ty\" significa que es un multiplo de diez y lo trata como tal.\r\n        } else if (cadenaSeparada[i].endsWith(\"ty\")) {\r\n            numero += tenMultiplesWords(cadenaSeparada[i]);\r\n\r\n            // Por ultimo, si no es ninguna de las otras lo trata como un numero normal.\r\n        } else {\r\n            numero += zeroToNineteenWords(cadenaSeparada[i]);\r\n        }\r\n\r\n        // Devuelve el resultado.\r\n        return numero;\r\n    }\r\n\r\n    // Fncion para pasar de letras (one, two, three, ...) a numeros.\r\n    private static int zeroToNineteenWords(String word) {\r\n        // Array con los valores.\r\n        String[] array0_19 = {\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\",\r\n                \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"};\r\n\r\n        // Variable para posición.\r\n        int pos = 0;\r\n\r\n        // En este ciclo se determina la posición de la variable introducida. Una vez hecho eso, sale del bucle \r\n        // y devuelve la posición.\r\n        while (pos < array0_19.length) {\r\n            if (word.equals(array0_19[pos])) {\r\n                break;\r\n            }\r\n            pos++;\r\n        }\r\n\r\n        // Devuelve posición.\r\n        return pos;\r\n    }\r\n\r\n    // Funcion para pasar de letras a numeros los multiplos de 10.\r\n    private static int tenMultiplesWords(String word) {\r\n        // Array que contiene los posibles valores.\r\n        String[] array20_90 = {\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"};\r\n\r\n        // Variable de posición\r\n        int pos = 0;\r\n\r\n        // Ciclo que determina el valor del string segun su posición en el array.\r\n        while (pos < array20_90.length) {\r\n            if (word.equals(array20_90[pos])) {\r\n                break;\r\n            }\r\n            pos++;\r\n        }\r\n\r\n        // Duelve el resultado. En este caso, suma 2 a la posición porque los valores empiezan en \"twenty\",\r\n        // luego los multiplica por 10 porque son, valga la redundancia, multiplos de 10.\r\n        return (pos + 2) * 10;\r\n    }\r\n\r\n    // Esta función determina si un valor del array es una potencia (thousand, million, etc.).\r\n    private static boolean potencias(String word) {\r\n        // Array con los posibles valores.\r\n        String[] sufijos = {\"\", \"thousand\", \"million\", \"billion\", \"trillion\", \"quadrillion\", \"quintillion\"};\r\n\r\n        // Variable booleana que devolvera la función.\r\n        boolean potencia = false;\r\n\r\n        // Si la variable introducida es igual a alguno de los valores del array entonces potencia = true.\r\n        for (int i = 0; i < sufijos.length; i++) {\r\n            if (word.equals(sufijos[i])) {\r\n                potencia = true;\r\n            }\r\n        }\r\n\r\n        // Devuelve el resultado.\r\n        return potencia;\r\n    }\r\n\r\n    // Esta función multiplica el numero por la potencia en cuestión (thousand, million, etc.).\r\n    private static long multiplicarPorPotencia(long numero, String potencia) {\r\n        // Array con los posibles valores.\r\n        String[] sufijos = {\"\", \"thousand\", \"million\", \"billion\", \"trillion\", \"quadrillion\", \"quintillion\"};\r\n\r\n        // En este ciclo se determina la potencia correspondiente y se multiplica el numero por 10^potencia.\r\n        for (int i = 0; i < sufijos.length; i++) {\r\n            if (sufijos[i].equals(potencia)) {\r\n                numero *= Math.pow(10, i * 3);\r\n            }\r\n        }\r\n\r\n        // Devuelve el resultado.\r\n        return numero;\r\n    }\r\n\r\n    // Función para añadir los sufijos (hundred, million, etc.).\r\n    private static String añadirSufijos(int longitudNumero, int[] array) {\r\n        // Array con los sufijos.\r\n        String[] sufijos = {\"\", \" thousand \", \" million \", \" billion \", \" trillion \", \" quadrillion \", \" quintillion \"};\r\n\r\n        StringBuilder resultado = new StringBuilder();\r\n\r\n        // Esta variable indica en el grupo de 3 en el que nos encontramos. Miles, Millones, Centenares, etc. En la\r\n        // variable he añadido un -1 para que redondee siempre hacia abajo. Si no, saldria que tres cifras de mil\r\n        // equivale a millones.\r\n        int fase = (longitudNumero - 1) / 3;\r\n\r\n        // Este loop va haciendo los numeros tantas veces como grupos de 3 tengamos.\r\n        while (longitudNumero > 0) {\r\n            // Llamamos a la función para construir el numero.\r\n            resultado.append(sacarCentenas(longitudNumero, array));\r\n\r\n            // Mete el sufijo solo si alguno de los 3 valores no es 0. Esto es para evitar que salga un \"zero million\",\r\n            // por ejemplo.\r\n            if (longitudNumero > 3 && array[array.length - longitudNumero] + array[array.length - longitudNumero + 1] +\r\n                    array[array.length - longitudNumero + 2] != 0) {\r\n                resultado.append(sufijos[fase]);\r\n            }\r\n\r\n            // Estas lineas quedan anuladas porque hay una contradicción en los tests.\r\n            // Si después del thousand no hay centenas, pero si decenas o unidades, entonces pone \"and\".\r\n                /*if (fase == 1 && (array[array.length - 3] == 0 && array[array.length - 1] + array[array.length - 2] != 0)) {\r\n                    resultado.append(\"and \");\r\n                }*/\r\n\r\n            // Pasamos a la siguiente fase y calculamos la longitud del numero que nos falta.\r\n            fase--;\r\n            int resto = (longitudNumero % 3);\r\n            if (resto == 0) {\r\n                resto = 3;\r\n            }\r\n            longitudNumero -= resto;\r\n        }\r\n\r\n        // Es importante convertir el resultado a String porque lo tenia en StringBuilder.\r\n        return resultado.toString();\r\n    }\r\n\r\n    // Funcion para construir cada numero en grupos de 3 (centenas, decenas y unidades).\r\n    private static String sacarCentenas(int longitudNumero, int[] array) {\r\n        // Primero declaramos todas las variables que vamos a utilizar.\r\n        String centenas = \"\";\r\n        String decenunidades = \"\";\r\n        String decenas = \"\";\r\n        String unidades = \"\";\r\n        String resultado = \"\";\r\n\r\n\r\n        // Cifra de las centenas\r\n        if (longitudNumero % 3 == 0) {\r\n            // Unicamente si hay un valor en la posicion de las centenas añade \"hundred\".\r\n            if (array[array.length - longitudNumero] != 0) {\r\n                centenas = zeroToNineteen((int) array[array.length - longitudNumero]) + \" hundred\";\r\n                resultado = centenas;\r\n\r\n                // Añade un and si los digitos de despues no son 0.\r\n                if (array[array.length - longitudNumero + 1] + array[array.length - longitudNumero + 2] != 0) {\r\n                    resultado = resultado + \" and \";\r\n                }\r\n            }\r\n            // Pasa a la siguiente cifra\r\n            longitudNumero--;\r\n        }\r\n\r\n        long decenasyUnidades = 0;\r\n\r\n        // Esta parte es por si las decenas y unidades son del 0 al 19, ya que tienen un nombre único.\r\n        if (longitudNumero % 3 == 2) {\r\n            decenasyUnidades = (array[array.length - longitudNumero] * 10) + array[array.length - longitudNumero + 1];\r\n        }\r\n\r\n        // Si se cumple la condicion entonces añade del 0 al 19.\r\n        if (decenasyUnidades < 20 && decenasyUnidades > 0) {\r\n            decenunidades = zeroToNineteen((int) decenasyUnidades);\r\n            resultado = resultado + decenunidades;\r\n        } else {\r\n            // Si la condición no se cumple, crea las decenas.\r\n            if (array[array.length - longitudNumero] != 0 && longitudNumero % 3 == 2) {\r\n                decenas = tenMultiples(array[array.length - longitudNumero]);\r\n                resultado = resultado + decenas;\r\n\r\n                // Si despues de las decenas el valor es != 0 entonces añade \"-\".\r\n                if (array[array.length - longitudNumero + 1] != 0) {\r\n                    resultado = resultado + \"-\";\r\n                }\r\n\r\n                // Pasa a la siguiente cifra.\r\n                longitudNumero--;\r\n            }\r\n\r\n            // Finalmente añade las unidades en caso de que el valor sea diferente a 0.\r\n            if (array[array.length - longitudNumero] != 0 && longitudNumero % 3 == 1) {\r\n                unidades = zeroToNineteen((int) array[array.length - longitudNumero]);\r\n            }\r\n            resultado = resultado + unidades;\r\n        }\r\n\r\n        // Devuelve el resultado.\r\n        return resultado;\r\n    }\r\n\r\n    // Funcion que determina cuantas cifras tiene el número introducido en la función principal.\r\n    private static int cifrasNumero(int[] arrayDigits) {\r\n        int longitudNumero = 0;\r\n\r\n        // En este ciclo se comprueba posicion por posicion si hay ceros o no. Una vez que encuentra algo diferente a\r\n        // cero se detiene y ya tiene la longitud del numero.\r\n        for (int i = 0; i < arrayDigits.length; i++) {\r\n            longitudNumero = arrayDigits.length - i;\r\n            if (arrayDigits[i] != 0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Devuelve el resultado\r\n        return longitudNumero;\r\n    }\r\n\r\n    // Funcion que convierte el numero en un array de int.\r\n    private static int[] convertirArray(long n) {\r\n        // Crea el array de el numero maximo de posiciones (quintillion).\r\n        int[] array = new int[21];\r\n\r\n        // En este ciclo se divide el numero entre la potencia de 10^i. Si el resultado es cero divide entre una\r\n        // potencia mas pequeña. Si es distinto a cero, asigna ese valor a su correspondiente posición en el array y\r\n        // cambia el numero por el resto de la división. Vuelve a operar hasta que recorre todas las posiciones.\r\n        for (int i = array.length; i > 0; i--) {\r\n            long potencia = (long) Math.pow(10, i - 1);\r\n            if (n / potencia != 0) {\r\n                array[array.length - i] = (int) (n / potencia);\r\n                n = n % potencia;\r\n            } else {\r\n                array[array.length - i] = 0;\r\n            }\r\n        }\r\n\r\n        // Devuelve resultado.\r\n        return array;\r\n    }\r\n\r\n    // Esta función selecciona del array de strings el numero del 0 - 19 que corresponda segun la variable introducida.\r\n    private static String zeroToNineteen(int n) {\r\n        String[] array0_19 = {\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\", \"ten\", \"eleven\",\r\n                \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\"};\r\n\r\n        return array0_19[n];\r\n    }\r\n\r\n    // Esta funcion devuelve los multiplos de 10 (20, 30, ...90) segun la variable introducida.\r\n    private static String tenMultiples(int n) {\r\n        n = n - 2;\r\n\r\n        String[] array20_90 = {\"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\"};\r\n\r\n        return array20_90[n];\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Practica 1 - NUMBERS/src/Numbers.java b/../Practica 1 - NUMBERS/src/Numbers.java
--- a/../Practica 1 - NUMBERS/src/Numbers.java	(revision b95c49635e7b1a846d7a2cafbc5adc096aa208e1)
+++ b/../Practica 1 - NUMBERS/src/Numbers.java	(date 1638298581039)
@@ -22,9 +22,6 @@
     }
 
     public static long words(String s) {
-        // Con esta variable sacamos la ultima posición de letra del string.
-        int longitud = s.length() - 1;
-
         // Aquí se eliminan "and" y "-".
         s = s.replace(" and", "");
         s = s.replace("-", " ");
@@ -179,11 +176,12 @@
                 resultado.append(sufijos[fase]);
             }
 
-            // Estas lineas quedan anuladas porque hay una contradicción en los tests.
-            // Si después del thousand no hay centenas, pero si decenas o unidades, entonces pone "and".
-                /*if (fase == 1 && (array[array.length - 3] == 0 && array[array.length - 1] + array[array.length - 2] != 0)) {
-                    resultado.append("and ");
-                }*/
+            // Estas lineas quedan anuladas porque hay una contradicción en los tests. Igualmente las dejo comentadas
+            // para que se vea como debería ser
+                // Si después del thousand no hay centenas, pero si decenas o unidades, entonces pone "and".
+                    /*if (fase == 1 && (array[array.length - 3] == 0 && array[array.length - 1] + array[array.length - 2] != 0)) {
+                        resultado.append("and ");
+                    }*/
 
             // Pasamos a la siguiente fase y calculamos la longitud del numero que nos falta.
             fase--;
@@ -212,7 +210,7 @@
         if (longitudNumero % 3 == 0) {
             // Unicamente si hay un valor en la posicion de las centenas añade "hundred".
             if (array[array.length - longitudNumero] != 0) {
-                centenas = zeroToNineteen((int) array[array.length - longitudNumero]) + " hundred";
+                centenas = zeroToNineteen(array[array.length - longitudNumero]) + " hundred";
                 resultado = centenas;
 
                 // Añade un and si los digitos de despues no son 0.
@@ -252,7 +250,7 @@
 
             // Finalmente añade las unidades en caso de que el valor sea diferente a 0.
             if (array[array.length - longitudNumero] != 0 && longitudNumero % 3 == 1) {
-                unidades = zeroToNineteen((int) array[array.length - longitudNumero]);
+                unidades = zeroToNineteen(array[array.length - longitudNumero]);
             }
             resultado = resultado + unidades;
         }
@@ -274,7 +272,7 @@
             }
         }
 
-        // Devuelve el resultado
+        // Devuelve elp resultado
         return longitudNumero;
     }
 
